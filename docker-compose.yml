version: '3.9'
x-default-logging:
  &logging
  driver: "json-file"
  options:
    max-size: "5m"
    max-file: "2"

networks:
  default:
    name: opentelemetry-demo
    driver: bridge

services:
  # Checkout service
  storageservice:
    image: storageservice
    container_name: storage-service
    build:
      context: ./
      dockerfile: Dockerfile
      cache_from:
        - storageservice
    deploy:
      resources:
        limits:
          memory: 20M
    restart: always
    ports:
      - "${STORAGE_SERVICE_PORT}:${STORAGE_SERVICE_PORT}"
    environment:
      - OTEL_EXPORTER_OTLP_TRACES_ENDPOINT
      - OTEL_EXPORTER_OTLP_METRICS_ENDPOINT
      - OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE
      - OTEL_SERVICE_NAME=storageservice
    depends_on:
      - otelcol
    logging: *logging

  # Jaeger
  jaeger:
    image: jaegertracing/all-in-one
    container_name: jaeger
    command:
      [
        "--memory.max-traces",
        "10000",
        "--query.base-path",
        "/jaeger/ui"
      ]
    deploy:
      resources:
        limits:
          memory: 275M
    restart: always
    ports:
      - "${JAEGER_SERVICE_PORT}" # Jaeger UI
      - "4317" # OTLP gRPC default port
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    logging: *logging

  # Grafana
  grafana:
    image: grafana/grafana:10.1.2
    container_name: grafana
    volumes:
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    ports:
      - "${GRAFANA_SERVICE_PORT}"
    logging: *logging

  # OpenTelemetry Collector
  otelcol:
    image: otel/opentelemetry-collector-contrib:0.84.0
    container_name: otel-col
    deploy:
      resources:
        limits:
          memory: 100M
    restart: always
    command:
      [
        "--config=/etc/otelcol-config.yml",
        "--config=/etc/otelcol-config-extras.yml"
      ]
    volumes:
      - ./otelcollector/otelcol-config.yml:/etc/otelcol-config.yml
      - ./otelcollector/otelcol-config-extras.yml:/etc/otelcol-config-extras.yml
    ports:
      - "4317" # OTLP over gRPC receiver
      - "4318:4318" # OTLP over HTTP receiver
      - "9464" # Prometheus exporter
      - "8888" # metrics endpoint
    depends_on:
      - jaeger
    logging: *logging

  # Prometheus
  prometheus:
    image: quay.io/prometheus/prometheus:v2.47.0
    container_name: prometheus
    command:
      - --web.console.templates=/etc/prometheus/consoles
      - --web.console.libraries=/etc/prometheus/console_libraries
      - --storage.tsdb.retention.time=1h
      - --config.file=/etc/prometheus/prometheus-config.yaml
      - --storage.tsdb.path=/prometheus
      - --web.enable-lifecycle
      - --web.route-prefix=/
    volumes:
      - ./prometheus/prometheus-config.yaml:/etc/prometheus/prometheus-config.yaml
    ports:
      - "${PROMETHEUS_SERVICE_PORT}:${PROMETHEUS_SERVICE_PORT}"
    logging: *logging
